@page
@model ContosoUniversity.Pages.Courses.IndexModel
@using System.Text.Json;

@{
    ViewData["Title"] = "Courses";
}
<style>
    #creditsPieChart {
        max-width: 600px;
        max-height: 400px;
        margin: 20px auto;
    }
</style>
<h2>Courses</h2>

<p>
    <a asp-page="Create" class="btn btn-success">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-group">
        <label for="searchTitle">Title:</label>
        <input type="text" id="searchTitle" name="SearchTitle" value="@Model.CurrentTitleFilter" class="form-control" />
    </div>
    <div class="form-group">
        <label for="searchCredits">Credits:</label>
        <input type="number" id="searchCredits" name="SearchCredits" value="@Model.CurrentCreditsFilter" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
    <a asp-page="./Index" class="btn btn-secondary">Reset</a>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].CourseID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Credits)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].Department)
            </th>
            <th>
                @Html.DisplayNameFor(Model => Model.Courses[0].Instructor)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Courses)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Credits)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Instructor.FullName)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.CourseID" class="btn btn-primary">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.CourseID" class="btn btn-info">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.CourseID" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Courses.PageIndex - 1)"
   asp-route-currentTitleFilter="@Model.CurrentTitleFilter"
   class="btn btn-primary @(Model.PrevDisabled ? "disabled" : "")">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Courses.PageIndex + 1)"
   asp-route-currentTitleFilter="@Model.CurrentTitleFilter"
   class="btn btn-primary @(Model.NextDisabled ? "disabled" : "")">
    Next
</a>
<a asp-page="Grades" class="btn btn-info">Preview Grades</a>


<canvas id="creditsPieChart"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Get the course titles and course IDs from the model and make them JavaScript arrays
    var courseTitles = @Html.Raw(JsonSerializer.Serialize(Model.Courses.Select(c => c.Title).ToList()));
    var courseIds = @Html.Raw(JsonSerializer.Serialize(Model.Courses.Select(c => c.CourseID).ToList()));

    var ctx = document.getElementById('creditsPieChart').getContext('2d');
    var creditsPieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: courseTitles, // Use the course titles array here
            datasets: [{
                label: 'Course Credits',
                data: @Html.Raw(JsonSerializer.Serialize(Model.Courses.Select(c => c.Credits).ToList())),
                backgroundColor: [
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(153, 102, 255, 0.6)',
                    'rgba(255, 159, 64, 0.6)',
                    'rgba(255, 205, 86, 0.6)'
                ],
                borderColor: [
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 205, 86, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    callbacks: {
                        label: function(tooltipItem) {
                            return tooltipItem.label + ': ' + tooltipItem.raw + ' Credits';
                        }
                    }
                }
            },
            onClick: function(event, array) {
                if (array.length > 0) {
                    var index = array[0].index; // Get the index of the clicked segment
                    var courseId = courseIds[index]; // Get the course ID based on the index

                    // Redirect to the course details page with the CourseID in the URL
                    window.location.href = '/Courses/EnrollmentCourses/' + courseId;
                }
            }
        }
    });
</script>